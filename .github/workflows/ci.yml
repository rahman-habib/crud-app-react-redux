name: Node.js CI/CD with Docker

on:
  push:
    branches: [ "master" ]


env:
  REGISTRY: docker.io
  IMAGE_NAME: rehmanhabib/webapp-build
  CI: false

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x] # Use Node.js v20

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm' # Enable caching for dependencies

      - name: Install Dependencies
        run: npm ci # Clean, faster install

      - name: Build Application
        run: npm run build --if-present
  docker:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          token: ${{ secrets.PASS }} # Use access token

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: rehmanhabib/webapp-build

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          cache-from: none
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:test
          labels: ${{ steps.meta.outputs.labels }}

  deploy_to_server:
    name: Deploy to Server
    runs-on: ubuntu-latest
    needs: docker # Now waits for the build to complete

    steps:
      - name: Trigger Webhook Deployment
        uses: distributhor/workflow-webhook@v2 
        env:
          webhook_url: https://h1test.invoicemate.net/webhooks/webapp
          webhook_secret: none
